include vars.mk

ifdef DISTR
REPO_COMPONENT=$(DISTR)-$(COMPONENT)
else
REPO_COMPONENT=$(COMPONENT)
endif

ifdef IMAGE_PREFIX
REPOSITORY=$(IMAGE_PREFIX)/$(REPO_COMPONENT)
else
REPOSITORY=$(REPO_COMPONENT)
endif

IMAGE=$(REPOSITORY):$(BUILD_TAG)

dev-env:
ifdef DEV_ENV
	$(DEV_ENV)
endif

pull:
	docker pull $(IMAGE)

build:
	docker build --rm -t $(IMAGE) .

build-pull:
	docker build --pull --rm -t $(IMAGE) .

start: stop
	@-docker run -d --name=$(COMPONENT) $(DOCKER_RUN_OPTS) $(IMAGE) $(DOCKER_RUN_ARGS)
	@-docker logs $(COMPONENT)

stop:
	@-docker stop $(COMPONENT)
	@-docker rm $(COMPONENT)

restart: stop start

enter:
	docker exec -t -i $(COMPONENT) $(SHELL)

logs:
	@-docker logs -f $(COMPONENT)

clean-containers:
	docker rm -f $$(docker ps -q --all -f name=$(COMPONENT);status=exited)

clean-images:
	docker rmi -f $$(docker images -q $(IMAGE_PREFIX)/$(COMPONENT))

clean-all: clean-containers clean-images

push:
	docker tag -f $(IMAGE) $(REGISTRY)/$(IMAGE)
	docker push $(REGISTRY)/$(IMAGE)

